第6章 访问权限控制

6.1 包：库单元
		1-import关键字提供管理名字空间的机制
			 1.为了防止类名冲突，为每个类创建唯一的标识符
		2-Java源文件=编译单元			
		3-代码组织：
			 1.每个类都会产生一个.class文件
			 2.package关键字位于文件的第一句
			   声明该编译单元为XXX的类库中的一部分
		4-创建独一无二的包名：
			 1.Internet域名反写
			 2.设置环境变量CLASSPATH=,;D:\java;F:\java
			   可以设置多个类路径
		5-定制工具库：
			 1.封装一些算法或循环遍历的工具类
		6-用import改变行为
			 1.Java没有C中的条件编译功能
			 2.通过修改被导入的package的方法实现调试版和发布版之间的转换
		
6.2 Java访问权限修饰词
		1-权限修饰词：public，protected，默认(包访问权限)，private
		     访问权限的控制通常称为具体实现的隐藏
		2-包访问权限：
			 允许包内的成员相互访问
		3-public：接口访问权限
			 其他类都可以访问
		4-private：你无法访问
			 除了包含该成员的类之外，其他任何类都无法访问
			 如隐藏某个构造器
		5-protected：继承访问权限
			 不同包的子类，对父类有访问权限，而不是所有类
6.3 接口和实现
		1-封装：把数据和方法包装进类中，以及具体实现的隐藏
		2-访问权限的边界划在数据类型的内部
			 1.第一个原因：设定客户端程序员可以使用和不可以使用的界限
			 2.第二个原因：接口和实现进行分离
		
6.4 类的访问权限
		1-编译单元内只能有一个public类
		2-该类的名称必须与文件的名称相同，包括大小写
		3-可以完全不带public的类，包访问权限。
		4-类不可以是private和protected，仅能是public和包访问权限
		5-不让人访问该类，把所有的构造器都指定为private，
		  特殊：可以在该类的static成员内部创建
		
6.5 总结







